# -*- coding: utf-8 -*-
"""레시피명_빈도수.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1I1UjqOoggBRXLEg7l8Xw0ichxuVOLaV9
"""

from google.colab import drive
import pandas as pd
from collections import Counter
import matplotlib.pyplot as plt
import os

# 한글 폰트 설치
!sudo apt-get install -y fonts-nanum
!sudo fc-cache -fv
!rm ~/.cache/matplotlib -rf

import matplotlib.pyplot as plt
import matplotlib.font_manager as fm

plt.rc('font', family='NanumBarunGothic')

from google.colab import drive
import pandas as pd
from collections import Counter
import matplotlib.pyplot as plt
import os

# 구글 드라이브 마운트
drive.mount('/content/drive')

# 메인서브 폴더 내의 모든 파일에 대해 반복
folder_path = '/content/drive/My Drive/메인_서브'  # 폴더 경로 수정
excel_files = [f for f in os.listdir(folder_path) if f.endswith('.xlsx')]

for file_name in excel_files:
    file_path = os.path.join(folder_path, file_name)

    # 파일이 실제로 .xlsx 확장자를 가지고 있는지 확인
    if not file_path.endswith('.xlsx'):
        print(f"파일 '{file_name}'은 .xlsx 확장자가 아닙니다.")
        continue

    try:
        # 데이터프레임 로드, 명시적으로 engine을 지정
        df = pd.read_excel(file_path, engine='openpyxl')

        # 'name' 열의 데이터를 토큰화
        tokens = df['name'].str.split().explode()

        # 토큰의 빈도수 계산 및 전체 카운터에 추가
        file_frequency = Counter(tokens)

        # 파일별 가장 흔한 30개의 토큰과 그 빈도수 가져오기 및 출력
        most_common_tokens = file_frequency.most_common(300)
        print(f"파일 '{file_name}'의 가장 흔한 토큰:")
        for token, freq in most_common_tokens:
            print(f"'{token}': {freq}번 등장")
        print("\n")

        # 파일별로 그래프 생성
        plt.figure(figsize=(10, 8))  # 그래프 크기 조정
        tokens, frequencies = zip(*most_common_tokens)
        plt.bar(tokens, frequencies)
        plt.xlabel('Tokens')
        plt.ylabel('Frequency')
        plt.title(f'Top 30 Most Common Tokens in {file_name}')
        plt.xticks(rotation=90)  # 텍스트 회전
        plt.show()
    except Exception as e:
        # 파일 로드 중 발생한 오류를 출력
        print(f"파일 '{file_name}'을 로드하는 중 오류가 발생했습니다: {e}")
        continue

from google.colab import drive
import pandas as pd
from collections import Counter
import os

# 구글 드라이브 마운트
drive.mount('/content/drive')

# 메인서브 폴더 내의 모든 파일에 대해 반복
folder_path = '/content/drive/My Drive/메인_서브'  # 폴더 경로 수정
excel_files = [f for f in os.listdir(folder_path) if f.endswith('.xlsx')]

# 각 파일에서의 가장 흔한 100개의 토큰을 저장할 리스트
top_100_tokens_per_file = []

for file_name in excel_files:
    file_path = os.path.join(folder_path, file_name)

    # 파일이 실제로 .xlsx 확장자를 가지고 있는지 확인
    if not file_path.endswith('.xlsx'):
        print(f"파일 '{file_name}'은 .xlsx 확장자가 아닙니다.")
        continue

    try:
        # 데이터프레임 로드, 명시적으로 engine을 지정
        df = pd.read_excel(file_path, engine='openpyxl')

        # 'name' 열의 데이터를 토큰화
        tokens = df['name'].str.split().explode()

        # 토큰의 빈도수 계산 및 가장 흔한 100개의 토큰 가져오기
        token_frequency = Counter(tokens)
        top_100_tokens = [token for token, freq in token_frequency.most_common(300)]

        # 각 파일에서의 가장 흔한 100개의 토큰을 리스트에 추가
        top_100_tokens_per_file.append((file_name, top_100_tokens))

    except Exception as e:
        # 파일 로드 중 발생한 오류를 출력
        print(f"파일 '{file_name}'을 로드하는 중 오류가 발생했습니다: {e}")
        continue

# 모든 파일에서의 공통 토큰을 찾기 위해 초기 집합을 설정
common_tokens_set = set(top_100_tokens_per_file[0][1])

# 각 파일에서의 가장 흔한 100개의 토큰을 비교하여 공통 토큰을 찾음
for _, top_100_tokens in top_100_tokens_per_file[1:]:
    common_tokens_set.intersection_update(top_100_tokens)

# 딕셔너리를 사용하여 파일 이름을 키로하고 해당 파일의 고유한 토큰 리스트를 값으로 저장
unique_tokens_per_file = {}

for file_name, top_100_tokens in top_100_tokens_per_file:
    # 파일에서의 가장 흔한 100개 토큰
    all_tokens = set(top_100_tokens)

    # 다른 파일들에서의 공통 토큰을 제외한 고유한 토큰
    unique_tokens = all_tokens - common_tokens_set

    # 파일 이름을 키로 하고 해당 파일의 고유한 토큰 리스트를 값으로 저장
    unique_tokens_per_file[file_name] = list(unique_tokens)

# 결과 출력: 각 파일별로 고유한 토큰 리스트를 출력
for file_name, unique_tokens in unique_tokens_per_file.items():
    print(f"파일 '{file_name}'에서의 고유한 토큰:")
    print(unique_tokens)
    print("\n")

# 모든 파일에서의 고유한 토큰 리스트를 담을 리스트
unique_tokens_lists = list(unique_tokens_per_file.values())

# 모든 파일에서의 공통 토큰을 찾기 위해 초기 집합을 설정
common_tokens_set = set(unique_tokens_lists[0])

# 각 파일에서의 고유한 토큰 리스트를 비교하여 공통 토큰을 찾음
for unique_tokens in unique_tokens_lists[1:]:
    common_tokens_set.intersection_update(unique_tokens)

# 추가로 제거할 공통 토큰 목록을 설정
additional_common_tokens = ["♥[신혼밥상]"]

# 공통 토큰 목록에서 추가로 제거할 공통 토큰을 제거
common_tokens_set.difference_update(additional_common_tokens)

# 모든 파일에서의 고유한 토큰 리스트에서 최종 공통 토큰을 제거
unique_tokens_per_file_no_common = {}

for file_name, unique_tokens in unique_tokens_per_file.items():
    unique_tokens_no_common = [token for token in unique_tokens if token not in common_tokens_set]
    unique_tokens_per_file_no_common[file_name] = unique_tokens_no_common

# 결과 출력: 각 파일별로 최종 고유한 토큰 리스트를 출력
for file_name, unique_tokens in unique_tokens_per_file_no_common.items():
    print(f"파일 '{file_name}'에서의 최종 고유한 토큰:")
    print(unique_tokens)
    print("\n")

import re

# 한국어 문자만을 가진 토큰을 남기고 나머지 제거
def filter_korean_tokens(tokens):
    korean_tokens = [token for token in tokens if re.match(r'^[가-힣]+$', token)]
    return korean_tokens

# 모든 파일에서의 고유한 토큰 리스트에서 한국어 이외의 토큰 제거
unique_tokens_per_file_filtered = {}

for file_name, unique_tokens in unique_tokens_per_file_no_common.items():
    filtered_tokens = filter_korean_tokens(unique_tokens)
    unique_tokens_per_file_filtered[file_name] = filtered_tokens

# 결과 출력: 각 파일별로 최종 고유한 한국어 토큰 리스트를 출력
for file_name, filtered_tokens in unique_tokens_per_file_filtered.items():
    print(f"파일 '{file_name}'에서의 최종 고유한 한국어 토큰:")
    print(filtered_tokens)
    print("\n")

#여기까지만 쓰는게 좋을 것 같아용

# unique_tokens_per_file_filtered 딕셔너리에서 모든 토큰을 하나의 리스트로 모음
all_tokens = [token for tokens in unique_tokens_per_file_filtered.values() for token in tokens]

# 각 토큰이 몇 번 나타나는지 카운트
token_counts = {}
for token in all_tokens:
    if token in token_counts:
        token_counts[token] += 1
    else:
        token_counts[token] = 1

# 각 파일별로 고유한 토큰 리스트를 생성
unique_tokens_per_file_unique = {}
for file_name, filtered_tokens in unique_tokens_per_file_filtered.items():
    unique_tokens = [token for token in filtered_tokens if token_counts[token] == 1]
    unique_tokens_per_file_unique[file_name] = unique_tokens

# 결과 출력: 각 파일별로 최종 고유한 토큰 리스트를 출력
for file_name, unique_tokens in unique_tokens_per_file_unique.items():
    print(f"파일 '{file_name}'에서의 최종 고유한 토큰:")
    print(unique_tokens)
    print("\n")

# 1. 연속하는 2개의 문자열이 동일한 경우

# 사용자 입력 받기
user_input = input("추천받고 싶은 음식명을 입력하세요: ")

# 입력 처리: 입력된 음식명을 띄어쓰기를 기준으로 토큰화
input_tokens = user_input.split()

# 매칭 알고리즘: 연속하는 2개의 문자열이 일치하는 토큰 찾기
matched_recipes = []

for file_name, tokens in unique_tokens_per_file_unique.items():
    matched_tokens = []
    for token in tokens:
        for input_token in input_tokens:
            # 연속하는 2개의 문자열을 추출하여 비교
            for i in range(len(input_token) - 1):
                input_pair = input_token[i:i+2]
                if any(input_pair == token_pair for token_pair in [token[j:j+2] for j in range(len(token) - 1)]):
                    matched_tokens.append(token)
                    break
    if matched_tokens:
        matched_recipes.append((file_name, matched_tokens))

# 추천 결과 반환
if matched_recipes:
    print("추천하는 레시피 목록:")
    for file_name, tokens in matched_recipes:
        print(f"파일명: {file_name}, 매칭된 토큰: {', '.join(tokens)}")
else:
    print("매칭되는 레시피가 없습니다.")

# 2. 완전 동일한 경우에만 출력하도록

# 사용자 입력 받기
user_input = input("추천받고 싶은 음식명을 입력하세요: ")

# 입력 처리: 입력된 음식명을 띄어쓰기를 기준으로 토큰화
input_tokens = user_input.split()

# 매칭 알고리즘: 입력 토큰과 완전히 일치하는 토큰 찾기
matched_recipes = []

for file_name, tokens in unique_tokens_per_file_unique.items():
    matched_tokens = [token for token in tokens if token in input_tokens]
    if matched_tokens:
        matched_recipes.append((file_name, matched_tokens))

# 추천 결과 반환
if matched_recipes:
    print("추천하는 레시피 목록:")
    for file_name, tokens in matched_recipes:
        print(f"파일명: {file_name}, 매칭된 토큰: {', '.join(tokens)}")
else:
    print("매칭되는 레시피가 없습니다.")

# 3. 띄어쓰기를 기준으로 사용자 입력 토큰화하여 비교

# 사용자 입력 받기
user_input = input("추천받고 싶은 음식명을 입력하세요: ")

# 입력 처리: 입력된 음식명을 토큰화
input_tokens = user_input.split()

# 매칭 알고리즘: 입력 토큰과 부분적으로 일치하는 토큰 찾기
matched_recipes = []

for file_name, tokens in unique_tokens_per_file_unique.items():
    matched_tokens = [token for token in tokens if any(input_token in token for input_token in input_tokens)]
    if matched_tokens:
        matched_recipes.append((file_name, matched_tokens))

# 추천 결과 반환
if matched_recipes:
    print("추천하는 레시피 목록:")
    for file_name, tokens in matched_recipes:
        print(f"파일명: {file_name}, 매칭된 토큰: {', '.join(tokens)}")
else:
    print("매칭되는 레시피가 없습니다.")

!pip install konlpy

from konlpy.tag import Okt
okt = Okt()

# 토큰의 기본형을 반환하고 동사, 형용사, 부사를 제거하는 함수
def filter_tokens(tokens):
    filtered_tokens = []
    for token in tokens:
        morphs = okt.pos(token)
        for word, pos in morphs:
            # 동사, 형용사, 부사가 아닌 단어만 선택
            if pos not in ['Verb', 'Adjective', 'Adverb']:
                filtered_tokens.append(word)
    return filtered_tokens

# 각 파일별로 고유한 토큰 리스트에서 동사, 형용사, 부사 제거
unique_tokens_per_file_filtered = {}
for file_name, unique_tokens in unique_tokens_per_file_unique.items():
    filtered = filter_tokens(unique_tokens)
    unique_tokens_per_file_filtered[file_name] = filtered

# 결과 출력: 각 파일별로 동사, 형용사, 부사가 제거된 최종 고유한 토큰 리스트
for file_name, unique_tokens in unique_tokens_per_file_filtered.items():
    print(f"파일 '{file_name}'에서의 동사, 형용사, 부사가 제거된 최종 고유한 토큰:")
    print(unique_tokens)
    print("\n")

# 각 파일별로 다른 파일의 토큰들을 제외하고 고유 토큰만 추출
unique_tokens_per_file = {}
for file_name, tokens in unique_tokens_per_file_filtered.items():
    other_tokens = set()
    for other_file_name, other_file_tokens in unique_tokens_per_file_filtered.items():
        if file_name != other_file_name:
            other_tokens.update(other_file_tokens)
    unique_tokens = set(tokens) - other_tokens
    unique_tokens_per_file[file_name] = unique_tokens

# 결과 출력: 각 파일별로 고유한 토큰 리스트
for file_name, unique_tokens in unique_tokens_per_file.items():
    print(f"파일 '{file_name}'에서의 고유한 토큰:")
    print(unique_tokens)
    print("\n")

"""파일 '부침_main_sub2.xlsx'에서의 최종 고유한 토큰:
['참치밥전', '달걀전', '스팸무스비', '빈대떡', '야채전', '새우전', '김치전', '감자전', '동그랑땡', '크래미전', '애호박전', '부침개', '참치두부전', '참치전', '양배추전', '대파전', '새송이버섯전', '두부참치전', '팽이버섯전', '냉파요리', '찬밥', '연근전', '달래전', '호박', '달걀만두', '야채참치전', '맛살계란말이', '계란피자만들기', '부추전', '건새우부추전', '치즈전', '오믈렛', '백파더', '초간편', '콩나물전', '전요리', '계란두부전', '오코노미야끼', '부추장떡', '두부햄', '감파전', '깻잎전', '계란말이', '스팸깻잎전', '계란요리', '감자떡', '당근전', '프리타타', '당면', '양파링전', '찹쌀전', '도시락반찬', '교리김밥', '맛살전', '냉이', '하트맛살전', '두부부침', '참치캔', '스팸밥전', '쑥갓전', '느타리버섯전', '프렌치토스트', '에그치즈토스트', '감자채전', '부침', '어묵전', '감자채치즈전', '참치깻잎전', '계란전', '카레두부부침', '두부전', '달걀말이', '애호박채전', '고구마찹쌀전', '치즈오믈렛', '미나리전', '밥전']


파일 '기타_main_sub2.xlsx'에서의 최종 고유한 토큰:
['알리오올리오', '이자카야', '소풍도시락', '카나페', '별다방', '블루베리', '푸딩', '편의점', '딸기롤샌드위치', '누텔라', '유치원', '두부샐러드', '리스샐러드', '홍루이젠', '꼬마김밥', '오이롤초밥', '컵피자', '치즈케이크', '스무디', '요거트', '냉국', '카프레제', '또띠아롤', '오니기라즈', '오이냉국', '스팸주먹밥', '텐신항', '고구마빵만들기', '쉐이크', '리본주먹밥', '오렌지', '컵브라우니', '영화속요리', '깻잎쌈밥']


파일 '끓이기_main_sub2.xlsx'에서의 최종 고유한 토큰:
['전골', '감자스프', '감자수프', '짬뽕', '당면볶이', '우유달걀카레', '소고기무국', '참치두부찌개', '오야코동', '소고기뭇국', '찌개', '죽', '미역국', '된장국', '된장찌개', '매운탕', '새우탕', '카레우동', '계란탕','오징어무국', '새우젓국', '새우젓', '들깨탕', '대패', '김치찌개', '굴국', '배춧국', '라볶이', '감자계란국', '버섯들깨탕', '황태', '국', '솥밥', '두부찌개', '달걀국', '곰탕', '스튜', '소고기국', '감자국', '계란국', '달걀죽', '고추장찌개', '닭볶음탕', '북어국', '우유카레', '스팸순두부찌개', '닭곰탕', '굴소스마요라면', '감자짜글이', '배추된장국', '보양식', '밥한공기', '항정살', '수제비', '쌀쌀한', '황태국', '차슈덮밥', '뭇국', '해장국', '들깨가루', '콩나물국', '순두부찌개', '스프', '감자어묵국']


파일 '데치기_main_sub2.xlsx'에서의 최종 고유한 토큰:
['청포묵', '두릅', '목이버섯숙회', '피꼬막', '참두릅', '미나리강회', '실파강회', '케일쌈밥', '두릅데치기', '연근샐러드', '다시마쌈', '해산물샐러드', '호박잎', '물미역', '쌈', '숙회로', '머위대', '월남쌈', '쭈꾸미', '문어초회', '가스파초', '방울', '주스', '두릅숙회', '샤브샤브', '얌운센', '자숙문어', '곰취쌈밥', '다시마', '초장', '강회', '쪽파요리', '곰피', '갑오징어', '주꾸미', '쪽파','뉴욕핫도그', '오징어쪽파강회', '오징어샐러드', '오징어숙회', '쪽파말이', '고사리나물', '오징어강회', '셀러드', '오징어야채말이', '숙회', '쪽파강회', '오징어요리', '토마토샐러드', '문어초회만들기', '비엔나소시지', '오징어파강회', '봄동말이', '땅두릅', '방울토마토샐러드', '해물', '연근', '병아리콩', '새조개', '엄나무순', '두릅초회', '쪽파숙회', '숙회만들기', '파강회', '쇠미역']


파일 '무침_main_sub2.xlsx'에서의 최종 고유한 토큰:
['닭가슴살냉채', '오이요리', '냉파스타', '겨자소스', '도토리묵김무침', '콩나물무침', '파무침', '쑥갓', '마늘쫑고추장무침', '단무지무침', '오이부추무침', '겨자', '부추무침', '미나리무침', '간장무침', '무치기', '다이어트식', '청경채무침', '참나물겉절이', '가지구이무침', '부추겉절이', '고추무침', '오이무침', '봄동', '두부무침', '아삭이고추', '섬초고추장무침', '봄동겉절이', '오징어초무침', '고추장무침', '배추나물', '오이크래미무침', '두부시금치무침', '참나물무침', '꼬막무침', '나물반찬', '시금치무침', '대파', '상추겉절이', '배추겉절이', '쪽파무침', '파채', '마늘쫑무침', '시금치나물', '골뱅이무침', '도토리묵무침', '달래무침', '오이고추', '가지무침', '오이고추된장무침', '미역초무침', '된장무침', '생채', '숙주무침', '참나물', '들깨무침', '봄동나물', '배추된장무침', '코울슬로', '오징어채', '두부된장무침', '와사비', '콩나물요리']


파일 '비빔_main_sub2.xlsx'에서의 최종 고유한 토큰:
['상추비빔밥', '비빔냉면', '날치알', '쫄면', '비빔만두', '새싹비빔국수', '들기름막국수', '어묵비빔국수', '막국수', '달래양념장', '참치주먹밥', '비빔', '부추비빔밥', '밥버거', '샐러드파스타', '비빔라면', '낫또', '냉우동', '곤약비빔면', '비빔우동', '새싹비빔밥', '김치비빔국수', '꼬막비빔밥', '땡초', '애호박국수', '비빔면', '달래간장', '치즈밥', '비빔국수로', '비빔장', '칼국수', '명란알이', '간장계란밥', '비빔당면', '열무비빔국수', '국수요리', '간장비빔국수', '치킨마요덮밥', '쌈장으로', '한그릇요리로', '갓김치', '참치야채비빔밥', '알밥', '과카몰리', '쌈장만들기', '비빔밥', '콘샐러드', '메밀국수', '과콰몰리']


파일 '삶기_main_sub2.xlsx'에서의 최종 고유한 토큰:
['감자계란', '햇감자로', '삼겹살로', '식빵을', '삼겹살수육', '잡내', '앞다리살로', '핵꿀맛', '마늘보쌈', '소라', '앞다리살', '알감자', '소면', '동동', '사태', '펩시수육', '수육만들기', '감자샐러드', '콜라', '굽기', '김장엔', '김치말이국수', '스테이크에', '수육', '김치말이', '감자샐러드샌드위치', '보쌈김치', '쌍화탕', '계란삶기', '까르보나라', '된장만', '면', '냉국수', '김치의', '완숙', '육즙', '고구마샐러드', '삶아야', '잡내없이', '삶은계란', '고구마무스', '보쌈고기', '열무김치국수', '통삼겹살', '수수팥떡', '마늘소스', '한우', '에그샌드위치', '삶기', '모닝빵으로', '냉메밀국수', '감동란', '냉면', '매쉬드', '팥', '땅콩', '강된장', '스지수육', '에그마요', '수육삶기', '꼬막삶는법', '양배추삶는법', '돼지수육', '간장수육', '밤삶기', '밤', '열무국수', '감자에그샌드위치', '삶은', '야들야들한', '찰옥수수', '누린내', '감자삶는법', '메밀소바', '에그', '돼지껍데기', '최화정', '돼지고기수육', '돼지보쌈', '수육이', '압력솥으로', '시래기', '쌍화탕으로', '족발', ]


파일 '절임_main_sub2.xlsx'에서의 최종 고유한 토큰:
['레몬청', '백김치', '오이김치', '김장아찌', '초절임', '비트', '샐러리', '무초절임', '담는', '고기와', '설렁탕집', '끓이지', '절임', '담아', '깻잎절임', '오이피클', '무피클', '깻잎지', '오이지', '설렁탕', '아삭하고', '간장게장', '나박김치', '고추장아찌', '간장양념', '찰떡궁합', '계란장', '소박이', '담그기', '열무물김치', '피클', '피클만들기', '반숙계란장', '아삭하게',  '총각무김치', '레몬으로', '물', '물김치', '깍뚜기', '맛김치', '간장깻잎절임', '마약달걀장', '간장새우', '냉면무김치', '동치미', '양배추절임', '열무김치', '쪽파장아찌', '새우장', '배추김치', '간장새우장', '양파고추장아찌', '쌈무', '여름반찬', '깍두기', '간장고추장아찌', '담그는법', '담기', '무절임', '고기집', '생강청', '파김치', '딸기청', '가을무로', '단무지', '총각김치', '무장아찌', '양파장아찌', '무물김치', '오이소박이', '얼갈이김치', '양념게장', '새송이버섯장아찌', '배추물김치', '양파절임', '깻잎장아찌', '마약계란장', '콜라비피클', '햇양파로', '장아찌', '쌈무만들기', '쪽파김치', '청양고추로', '간장깻잎장아찌']


파일 '조림_main_sub2.xlsx'에서의 최종 고유한 토큰:
['감자조림', '감자조림만들기', '스팸두부조림', '삼치간장조림', '꿀조림', '비벼먹기', '간장감자조림', '무요리', '칼칼하고', '대패두부조림', '가자미조림', '닭조림', '꽈리고추', '매콤해서', '간단밑반찬', '오징어간장조림', '팽이버섯두부조림', '양념치킨맛', '떡', '두부조림', '양파가', '쉬운반찬', '장조림', '삼치조림', '생선',  '곤약조림', '참치감자조림', '메추리알조림', '달콤짭짤한', '어묵조림', '매운감자조림', '스팸감자조림', '간장조림', '감칠맛', '고등어조림', '파삼겹', '버섯으로', '단짠단짠한', '무조림', '간장양념으로', '매운맛', '통삼겹', '참치무조림', '조림', '간장두부조림', '멸치조림', '닭봉조림', '새송이버섯조림', '메추리알장조림', '고추장물', '갈치조림', '달큰', '닭날개']


파일 '찜_main_sub2.xlsx'에서의 최종 고유한 토큰:
['홍합찜', '간장찜닭', '알배추찜', '어묵찜', '배추찜', '단호박오리찜', '등갈비찜', '깻잎찜', '콜라찜닭', '김치찜', '계란찜밥', '감자찜', '꽈리고추찜', '카스테라', '오징어순대', '해물찜', '찜케이크', '갈비찜', '김치말이찜', '돼지갈비찜', '급식계란찜', '숙주찜', '찜닭', '알찜', '급식달걀찜', '바지락술찜', '고등어김치찜', '부들부들', '콩나물찜', '오리찜', '차돌박이찜', '아구찜', '야채말이찜', '찜', '매콤하고', '밥통', '가지밥', '일식', '닭찜', '돼지고기김치찜', '아기찜닭', '김치만두', '김치와', '단호박찜', '숙주', '돼지등뼈찜', '김치롤찜', '안동찜닭', '명란젓', '소갈비찜', '폭탄계란찜', '들깨찜', '무밥', '소시지콩나물찜', '밥통카스테라', '가지찜', '에그슬럿', '오리훈제', '말캉', '오븐', '등뼈찜', '계란찜', '바지락찜', '해물찜만들기', '단호박케이크', '콩나물새우찜', '갈비만두', '달걀찜', '등갈비김치찜', '콩나물과']


파일 '튀김_main_sub2.xlsx'에서의 최종 고유한 토큰:
['만두강정', '볼', '유린기', '찹쌀', '가지튀김', '사천', '두부탕수', '맥주', '양념치킨', '스틱', '크로켓', '생선까스', '황태강정', '순살치킨', '깐풍', '도넛', '떡국떡', '가츠동', '양파튀김', '빠스', '고로케', '가지탕수', '만두피로', '돈까스덮밥', '라이스페이퍼', '간장치킨', '두부탕수육', '과자', '튀김', '닭강정', '고구마치즈스틱', '간장소스', '고구마빠스', '식빵핫도그', '두부튀김',  '아란치니', '교촌', '감자튀김', '짜조', '만두피', '깐풍새우', '치즈스틱', '동태포로', '슈가떡', '감자치즈볼', '미니핫도그', '장어깐풍기', '치킨까스', '치즈가', '어니언링', '허니버터칩', '감자맛탕', '감자고로케', '순살', '고구마핫도그', '교촌치킨', '김말이', '츄러스', '감자크로켓', '베트남식', '새우튀김', '깐쇼새우', '고구마요리', '찹쌀도넛', '고구마스틱', '크림새우', '고구마맛탕', '팝콘', '멘보샤', '돈가스', '카라아게', '닭봉', '삼치', '깐풍기', '닭강정만들기', '고등어강정', '밥도그', '돈까스', '치킨너겟으로', '치즈볼', '가라아게']


파일 '회_main_sub2.xlsx'에서의 최종 고유한 토큰:
['자연산', '물회', '봉지', '연어효능', '소라카르파치오', '스시볼', '어묵을', '골뱅이소면물회', '숙성', '연어요리', '연어샐러드', '포케', '생연어비빔밥', '물회만들기', '육회', '연어회국수', '한치물회', '연어장덮밥', '연어회로', '생연어를', '싱싱한', '연어타다끼', '참치회','회초밥', '전복회', '초밥케이크', '연어장으로', '과메기', '연어샐러드와', '초밥전문점', '한치회', '훈제', '굴회만들기', '봄에', '회', '방어초밥', '참치회덮밥', '광어회', '곤부즈메', '삼합', '골뱅이물회', '생굴요리', '계란초밥', '물회육수에', '연어롤', '연어로', '연어소스', '생연어누드김밥', '지라시스시', '여름간식', '훈제연어샐러드', '광어초밥', '사케동', '훈제연어덮밥', '한치', '어묵물회', '생연어', '육사시미', '참치초밥', '회로', '광어삼합타워', '훈제연어롤', '단촛물', '전복', '홍어', '연어회', '연어국수와', '카르파쵸', '홀스래디쉬소스', '영양식', '회덮밥', '훈제연어', '훈제연어초밥', '타르타르소스', '자숙문어로', '오렌지와', '새우초밥', '국물요리로', '해삼회', '연어숙성', '연어초밥', '과일요리', '연어초밥과', '연어김밥', '피조개', '연어사케동만들기', '참치회초밥', '광어', '카르파치오', '해삼', '연어덮밥', '가르파쵸', '멍게']


파일 '볶음_main_sub2.xlsx'에서의 최종 고유한 토큰:
['오징어덮밥', '기름떡볶이', '기름', '굴소스가', '햄볶음', '햄', '양배추볶음', '맵지', '부타동', '볶음밥', '콩나물볶음밥', '짭조름', '새송이버섯볶음', '그라탕', '살치살', '애호박버섯볶음', '계란볶음', '오므라이스', '오징어볶음', '시금치덮밥', '닭볶음', '고소함', '감자볶음', '간장떡볶이', '시금치베이컨볶음', '진미채', '새우요리', '다이어트요리', '볶아', '삼색소보로덮밥', '면두부', '쫄깃하고' '계란볶음밥', '두부볶음', '불닭', '게살볶음밥', '볶음', '찹스테이크', '고추장삼겹살', '갈릭', '덮밥요리', '덮밥만들기', '호박볶음', '초스피드반찬', '숙주볶음', '달달', '나시고랭', '마늘볶음밥', '오삼불고기', '파프리카버섯볶음', '궁중떡볶이', '버터갈릭새우', '닭갈비', '스크램블', '어묵볶음', '골뱅이마늘볶음', '닭가슴살로']


파일 '굽기_main_sub2.xlsx'에서의 최종 고유한 토큰:
['비스코티', '크럼블', '녹차', '미숫가루', '러스크', '또띠아칩', '피넛버터', '말차', '가지의', '아몬드', '치킨스테이크', '통오징어', '마늘빵', '파운드', '떡말이', '치즈구이', '가지말이', '아몬드샤브레', '식빵으로', '샌드', '파이', '초코크랙쿠키', '마들렌', '롤케이크', '비스켓', '아망디오', '쇼콜라', '핫케이크', '식빵팝콘', '레몬', '모카', '아스파라거스', '양념구이', '버터구이', '스테이크', '초코나무숲', '팬케이크', '쉬림프', '플레인', '쫀득쫀득한', '노밀가루', '그라탱', '닭꼬치', '스콘', '콘치즈빵', '햄치즈', '고구마쿠키', '캐러멜', '김', '식빵요리', '마약토스트', '사브레', '베이컨말이', '안젤라베이킹', '카라멜', '머핀', '구이']


"""

# 사용자 정의 토큰 목록 예시
custom_tokens = {
    '부침_main_sub2.xlsx': ['참치밥전', '달걀전', '스팸무스비', '빈대떡', '야채전', '새우전', '김치전', '감자전', '동그랑땡', '크래미전', '애호박전', '부침개', '참치두부전', '참치전', '양배추전', '대파전', '새송이버섯전', '두부참치전', '팽이버섯전', '냉파요리', '찬밥', '연근전', '달래전', '호박', '달걀만두', '야채참치전', '맛살계란말이', '계란피자만들기', '부추전', '건새우부추전', '치즈전', '오믈렛', '백파더', '초간편', '콩나물전', '전요리', '계란두부전', '오코노미야끼', '부추장떡', '두부햄', '감파전', '깻잎전', '계란말이', '스팸깻잎전', '계란요리', '감자떡', '당근전', '프리타타', '당면', '양파링전', '찹쌀전', '도시락반찬', '교리김밥', '맛살전', '냉이', '하트맛살전', '두부부침', '참치캔', '스팸밥전', '쑥갓전', '느타리버섯전', '프렌치토스트', '에그치즈토스트', '감자채전', '부침', '어묵전', '감자채치즈전', '참치깻잎전', '계란전', '카레두부부침', '두부전', '달걀말이', '애호박채전', '고구마찹쌀전', '치즈오믈렛', '미나리전', '밥전'],

    '기타_main_sub2.xlsx': ['알리오올리오', '이자카야', '소풍도시락', '카나페', '별다방', '블루베리', '푸딩', '편의점', '딸기롤샌드위치', '누텔라', '유치원', '두부샐러드', '리스샐러드', '홍루이젠', '꼬마김밥', '오이롤초밥', '컵피자', '치즈케이크', '스무디', '요거트', '냉국', '카프레제', '또띠아롤', '오니기라즈', '오이냉국', '스팸주먹밥', '텐신항', '고구마빵만들기', '쉐이크', '리본주먹밥', '오렌지', '컵브라우니', '영화속요리', '깻잎쌈밥'],
    '끓이기_main_sub2.xlsx': ['전골', '감자스프', '감자수프', '짬뽕', '당면볶이', '우유달걀카레', '소고기무국', '참치두부찌개', '오야코동', '소고기뭇국', '찌개', '죽', '미역국', '된장국', '된장찌개', '매운탕', '새우탕', '카레우동', '계란탕','오징어무국', '새우젓국', '새우젓', '들깨탕', '대패', '김치찌개', '굴국', '배춧국', '라볶이', '감자계란국', '버섯들깨탕', '황태', '국', '솥밥', '두부찌개', '달걀국', '곰탕', '스튜', '소고기국', '감자국', '계란국', '달걀죽', '고추장찌개', '닭볶음탕', '북어국', '우유카레', '스팸순두부찌개', '닭곰탕', '굴소스마요라면', '감자짜글이', '배추된장국', '보양식', '밥한공기', '항정살', '수제비', '쌀쌀한', '황태국', '차슈덮밥', '뭇국', '해장국', '들깨가루', '콩나물국', '순두부찌개', '스프', '감자어묵국'],
    '데치기_main_sub2.xlsx': ['청포묵', '두릅', '목이버섯숙회', '피꼬막', '참두릅', '미나리강회', '실파강회', '케일쌈밥', '두릅데치기', '연근샐러드', '다시마쌈', '해산물샐러드', '호박잎', '물미역', '쌈', '숙회로', '머위대', '월남쌈', '쭈꾸미', '문어초회', '가스파초', '방울', '주스', '두릅숙회', '샤브샤브', '얌운센', '자숙문어', '곰취쌈밥', '다시마', '초장', '강회', '쪽파요리', '곰피', '갑오징어', '주꾸미', '쪽파','뉴욕핫도그', '오징어쪽파강회', '오징어샐러드', '오징어숙회', '쪽파말이', '고사리나물', '오징어강회', '셀러드', '오징어야채말이', '숙회', '쪽파강회', '오징어요리', '토마토샐러드', '문어초회만들기', '비엔나소시지', '오징어파강회', '봄동말이', '땅두릅', '방울토마토샐러드', '해물', '연근', '병아리콩', '새조개', '엄나무순', '두릅초회', '쪽파숙회', '숙회만들기', '파강회', '쇠미역'],
    '무침_main_sub2.xlsx': ['닭가슴살냉채', '오이요리', '냉파스타', '겨자소스', '도토리묵김무침', '콩나물무침', '파무침', '쑥갓', '마늘쫑고추장무침', '단무지무침', '오이부추무침', '겨자', '부추무침', '미나리무침', '간장무침', '무치기', '다이어트식', '청경채무침', '참나물겉절이', '가지구이무침', '부추겉절이', '고추무침', '오이무침', '봄동', '두부무침', '아삭이고추', '섬초고추장무침', '봄동겉절이', '오징어초무침', '고추장무침', '배추나물', '오이크래미무침', '두부시금치무침', '참나물무침', '꼬막무침', '나물반찬', '시금치무침', '대파', '상추겉절이', '배추겉절이', '쪽파무침', '파채', '마늘쫑무침', '시금치나물', '골뱅이무침', '도토리묵무침', '달래무침', '오이고추', '가지무침', '오이고추된장무침', '미역초무침', '된장무침', '생채', '숙주무침', '참나물', '들깨무침', '봄동나물', '배추된장무침', '코울슬로', '오징어채', '두부된장무침', '와사비', '콩나물요리'],
    '비빔_main_sub2.xlsx': ['상추비빔밥', '비빔냉면', '날치알', '쫄면', '비빔만두', '새싹비빔국수', '들기름막국수', '어묵비빔국수', '막국수', '달래양념장', '참치주먹밥', '비빔', '부추비빔밥', '밥버거', '샐러드파스타', '비빔라면', '낫또', '냉우동', '곤약비빔면', '비빔우동', '새싹비빔밥', '김치비빔국수', '꼬막비빔밥', '땡초', '애호박국수', '비빔면', '달래간장', '치즈밥', '비빔국수로', '비빔장', '칼국수', '명란알이', '간장계란밥', '비빔당면', '열무비빔국수', '국수요리', '간장비빔국수', '치킨마요덮밥', '쌈장으로', '한그릇요리로', '갓김치', '참치야채비빔밥', '알밥', '과카몰리', '쌈장만들기', '비빔밥', '콘샐러드', '메밀국수', '과콰몰리'],
    '삶기_main_sub2.xlsx': ['감자계란', '햇감자로', '삼겹살로', '식빵을', '삼겹살수육', '잡내', '앞다리살로', '핵꿀맛', '마늘보쌈', '소라', '앞다리살', '알감자', '소면', '동동', '사태', '펩시수육', '수육만들기', '감자샐러드', '콜라', '굽기', '김장엔', '김치말이국수', '스테이크에', '수육', '김치말이', '감자샐러드샌드위치', '보쌈김치', '쌍화탕', '계란삶기', '까르보나라', '된장만', '면', '냉국수', '김치의', '완숙', '육즙', '고구마샐러드', '삶아야', '잡내없이', '삶은계란', '고구마무스', '보쌈고기', '열무김치국수', '통삼겹살', '수수팥떡', '마늘소스', '한우', '에그샌드위치', '삶기', '모닝빵으로', '냉메밀국수', '감동란', '냉면', '매쉬드', '팥', '땅콩', '강된장', '스지수육', '에그마요', '수육삶기', '꼬막삶는법', '양배추삶는법', '돼지수육', '간장수육', '밤삶기', '밤', '열무국수', '감자에그샌드위치', '삶은', '야들야들한', '찰옥수수', '누린내', '감자삶는법', '메밀소바', '에그', '돼지껍데기', '최화정', '돼지고기수육', '돼지보쌈', '수육이', '압력솥으로', '시래기', '쌍화탕으로', '족발', ],
    '절임_main_sub2.xlsx': ['레몬청', '백김치', '오이김치', '김장아찌', '초절임', '비트', '샐러리', '무초절임', '담는', '고기와', '설렁탕집', '끓이지', '절임', '담아', '깻잎절임', '오이피클', '무피클', '깻잎지', '오이지', '설렁탕', '아삭하고', '간장게장', '나박김치', '고추장아찌', '간장양념', '찰떡궁합', '계란장', '소박이', '담그기', '열무물김치', '피클', '피클만들기', '반숙계란장', '아삭하게', '총각무김치', '레몬으로', '물', '물김치', '깍뚜기', '맛김치', '간장깻잎절임', '마약달걀장', '간장새우', '냉면무김치', '동치미', '양배추절임', '열무김치', '쪽파장아찌', '새우장', '배추김치', '간장새우장', '양파고추장아찌', '쌈무', '여름반찬', '깍두기', '간장고추장아찌', '담그는법', '담기', '무절임', '고기집', '생강청', '파김치', '딸기청', '가을무로', '단무지', '총각김치', '무장아찌', '양파장아찌', '무물김치', '오이소박이', '얼갈이김치', '양념게장', '새송이버섯장아찌', '배추물김치', '양파절임', '깻잎장아찌', '마약계란장', '콜라비피클', '햇양파로', '장아찌', '쌈무만들기', '쪽파김치', '청양고추로', '간장깻잎장아찌'],
    '조림_main_sub2.xlsx': ['감자조림', '감자조림만들기', '스팸두부조림', '삼치간장조림', '꿀조림', '비벼먹기', '간장감자조림', '무요리', '칼칼하고', '대패두부조림', '가자미조림', '닭조림', '꽈리고추', '매콤해서', '간단밑반찬', '오징어간장조림', '팽이버섯두부조림', '양념치킨맛', '떡', '두부조림', '양파가', '쉬운반찬', '장조림', '삼치조림', '생선', '곤약조림', '참치감자조림', '메추리알조림', '달콤짭짤한', '어묵조림', '매운감자조림', '스팸감자조림', '간장조림', '감칠맛', '고등어조림', '파삼겹', '버섯으로', '단짠단짠한', '무조림', '간장양념으로', '매운맛', '통삼겹', '참치무조림', '조림', '간장두부조림', '멸치조림', '닭봉조림', '새송이버섯조림', '메추리알장조림', '고추장물', '갈치조림', '달큰', '닭날개'],
    '찜_main_sub2.xlsx': ['홍합찜', '간장찜닭', '알배추찜', '어묵찜', '배추찜', '단호박오리찜', '등갈비찜', '깻잎찜', '콜라찜닭', '김치찜', '계란찜밥', '감자찜', '꽈리고추찜', '카스테라', '오징어순대', '해물찜', '찜케이크', '갈비찜', '김치말이찜', '돼지갈비찜', '급식계란찜', '숙주찜', '찜닭', '알찜', '급식달걀찜', '바지락술찜', '고등어김치찜', '부들부들', '콩나물찜', '오리찜', '차돌박이찜', '아구찜', '야채말이찜', '찜', '매콤하고', '밥통', '가지밥', '일식', '닭찜', '돼지고기김치찜', '아기찜닭', '김치만두', '김치와', '단호박찜', '숙주', '돼지등뼈찜', '김치롤찜', '안동찜닭', '명란젓', '소갈비찜', '폭탄계란찜', '들깨찜', '무밥', '소시지콩나물찜', '밥통카스테라', '가지찜', '에그슬럿', '오리훈제', '말캉', '오븐', '등뼈찜', '계란찜', '바지락찜', '해물찜만들기', '단호박케이크', '콩나물새우찜', '갈비만두', '달걀찜', '등갈비김치찜', '콩나물과'],
    '튀김_main_sub2.xlsx': ['만두강정', '볼', '유린기', '찹쌀', '가지튀김', '사천', '두부탕수', '맥주', '양념치킨', '스틱', '크로켓', '생선까스', '황태강정', '순살치킨', '깐풍', '도넛', '떡국떡', '가츠동', '양파튀김', '빠스', '고로케', '가지탕수', '만두피로', '돈까스덮밥', '라이스페이퍼', '간장치킨', '두부탕수육', '과자', '튀김', '닭강정', '고구마치즈스틱', '간장소스', '고구마빠스', '식빵핫도그', '두부튀김', '아란치니', '교촌', '감자튀김', '짜조', '만두피', '깐풍새우', '치즈스틱', '동태포로', '슈가떡', '감자치즈볼', '미니핫도그', '장어깐풍기', '치킨까스', '치즈가', '어니언링', '허니버터칩', '감자맛탕', '감자고로케', '순살', '고구마핫도그', '교촌치킨', '김말이', '츄러스', '감자크로켓', '베트남식', '새우튀김', '깐쇼새우', '고구마요리', '찹쌀도넛', '고구마스틱', '크림새우', '고구마맛탕', '팝콘', '멘보샤', '돈가스', '카라아게', '닭봉', '삼치', '깐풍기', '닭강정만들기', '고등어강정', '밥도그', '돈까스', '치킨너겟으로', '치즈볼', '가라아게'],
    '회_main_sub2.xlsx': ['자연산', '물회', '봉지', '연어효능', '소라카르파치오', '스시볼', '어묵을', '골뱅이소면물회', '숙성', '연어요리', '연어샐러드', '포케', '생연어비빔밥', '물회만들기', '육회', '연어회국수', '한치물회', '연어장덮밥', '연어회로', '생연어를', '싱싱한', '연어타다끼', '참치회','회초밥', '전복회', '초밥케이크', '연어장으로', '과메기', '연어샐러드와', '초밥전문점', '한치회', '훈제', '굴회만들기', '봄에', '회', '방어초밥', '참치회덮밥', '광어회', '곤부즈메', '삼합', '골뱅이물회', '생굴요리', '계란초밥', '물회육수에', '연어롤', '연어로', '연어소스', '생연어누드김밥', '지라시스시', '여름간식', '훈제연어샐러드', '광어초밥', '사케동', '훈제연어덮밥', '한치', '어묵물회', '생연어', '육사시미', '참치초밥', '회로', '광어삼합타워', '훈제연어롤', '단촛물', '전복', '홍어', '연어회', '연어국수와', '카르파쵸', '홀스래디쉬소스', '영양식', '회덮밥', '훈제연어', '훈제연어초밥', '타르타르소스', '자숙문어로', '오렌지와', '새우초밥', '국물요리로', '해삼회', '연어숙성', '연어초밥', '과일요리', '연어초밥과', '연어김밥', '피조개', '연어사케동만들기', '참치회초밥', '광어', '카르파치오', '해삼', '연어덮밥', '가르파쵸', '멍게'],
    '볶음_main_sub2.xlsx': ['오징어덮밥', '기름떡볶이', '기름', '굴소스가', '햄볶음', '햄', '양배추볶음', '맵지', '부타동', '볶음밥', '콩나물볶음밥', '짭조름', '새송이버섯볶음', '그라탕', '살치살', '애호박버섯볶음', '계란볶음', '오므라이스', '오징어볶음', '시금치덮밥', '닭볶음', '고소함', '감자볶음', '간장떡볶이', '시금치베이컨볶음', '진미채', '새우요리', '다이어트요리', '볶아', '삼색소보로덮밥', '면두부', '쫄깃하고', '계란볶음밥', '두부볶음', '불닭', '게살볶음밥', '볶음', '찹스테이크', '고추장삼겹살', '갈릭', '덮밥요리', '덮밥만들기', '호박볶음', '초스피드반찬', '숙주볶음', '달달', '나시고랭', '마늘볶음밥', '오삼불고기', '파프리카버섯볶음', '궁중떡볶이', '버터갈릭새우', '닭갈비', '스크램블', '어묵볶음', '골뱅이마늘볶음', '닭가슴살로'],
    '굽기_main_sub2.xlsx': ['비스코티', '크럼블', '녹차', '미숫가루', '러스크', '또띠아칩', '피넛버터', '말차', '가지의', '아몬드', '치킨스테이크', '통오징어', '마늘빵', '파운드', '떡말이', '치즈구이', '가지말이', '아몬드샤브레', '식빵으로', '샌드', '파이', '초코크랙쿠키', '마들렌', '롤케이크', '비스켓', '아망디오', '쇼콜라', '핫케이크', '식빵팝콘', '레몬', '모카', '아스파라거스', '양념구이', '버터구이', '스테이크', '초코나무숲', '팬케이크', '쉬림프', '플레인', '쫀득쫀득한', '노밀가루', '그라탱', '닭꼬치', '스콘', '콘치즈빵', '햄치즈', '고구마쿠키', '캐러멜', '김', '식빵요리', '마약토스트', '사브레', '베이컨말이', '안젤라베이킹', '카라멜', '머핀', '구이'],
    # 여기에 더 많은 파일과 토큰을 추가할 수 있습니다.
}

# 원래 unique_tokens_per_file_unique 대신 사용자 정의 토큰 목록 사용
unique_tokens_per_file_unique = custom_tokens

# 사용자 입력 받기
user_input = input("추천받고 싶은 음식명을 입력하세요: ")

# 입력 처리: 입력된 음식명을 띄어쓰기를 기준으로 토큰화
input_tokens = user_input.split()

# 매칭 알고리즘: 입력 토큰과 완전히 일치하는 토큰 찾기
matched_recipes = []

for file_name, tokens in unique_tokens_per_file_unique.items():
    matched_tokens = [token for token in tokens if token in input_tokens]
    if matched_tokens:
        matched_recipes.append((file_name, matched_tokens))

# 추천 결과 반환
if matched_recipes:
    print("추천하는 레시피 목록:")
    for file_name, tokens in matched_recipes:
        print(f"파일명: {file_name}, 매칭된 토큰: {', '.join(tokens)}")
else:
    print("매칭되는 레시피가 없습니다.")