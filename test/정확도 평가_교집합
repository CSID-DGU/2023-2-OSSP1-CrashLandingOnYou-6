{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPGxe+ilQ1UXZiCG+VhDDFt"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nuqVuq5Zlpin","executionInfo":{"status":"ok","timestamp":1701437715237,"user_tz":-540,"elapsed":19137,"user":{"displayName":"곽시헌","userId":"08857774292332952664"}},"outputId":"6d4f0656-ed8d-4e9d-a308-8ad985706a2f"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"markdown","source":["열 이름 출력"],"metadata":{"id":"hCD9gserm5JP"}},{"cell_type":"code","source":["import pandas as pd\n","\n","file_path = '/content/drive/MyDrive/Colab Notebooks/정규화_가장유사한셀+행번호.xlsx'\n","\n","# 엑셀 파일 로드\n","df = pd.read_excel(file_path)\n","\n","# 열 이름과 열 번호 출력\n","for idx, col_name in enumerate(df.columns):\n","    print(f\"열 번호: {idx}, 열 이름: {col_name}\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z-abMkT4oKMm","executionInfo":{"status":"ok","timestamp":1701438375885,"user_tz":-540,"elapsed":684,"user":{"displayName":"곽시헌","userId":"08857774292332952664"}},"outputId":"ac75110a-9dae-4ed6-cb27-eb5dd6bfcf45"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["열 번호: 0, 열 이름: Text\n","열 번호: 1, 열 이름: Excel Cell\n","열 번호: 2, 열 이름: Row Number\n","열 번호: 3, 열 이름: Matching Content\n"]}]},{"cell_type":"markdown","source":["정확도 평가"],"metadata":{"id":"GdraR9mDm8XU"}},{"cell_type":"code","source":["import pandas as pd\n","\n","# 엑셀 파일 불러오기\n","file_path = ''  # 엑셀 파일 경로\n","df = pd.read_excel(file_path)\n","\n","# 'A'열과 'D'열의 관계를 분석하는 함수 main/sub와 n_main/n_sub의 관계 분\n","def analyze_relationship(row):\n","    a_str = str(row['Text'])\n","    d_str = str(row['Matching Content'])\n","    row['E'] = 1 if d_str in a_str else 0\n","    row['F'] = 1 if a_str in d_str else 0\n","\n","    # 교집합 여부 확인\n","    intersection = False\n","    for a_part in a_str.split():\n","        if a_part in d_str:\n","            intersection = True\n","            break\n","    for d_part in d_str.split():\n","        if d_part in a_str:\n","            intersection = True\n","            break\n","    row['G'] = 1 if intersection and row['E'] == 0 and row['F'] == 0 else 0\n","\n","    return row\n","\n","# 각 행에 대해 함수 적용\n","df = df.apply(analyze_relationship, axis=1)\n","\n","# 결과를 새로운 파일로 저장\n","output_path = '/content/drive/MyDrive/Colab Notebooks/정규화_가장유사한셀+행번호.xlsx'  # 결과 파일 경로\n","df.to_excel(output_path, index=False)"],"metadata":{"id":"C-fQP5Z1lqEh"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":[],"metadata":{"id":"3O1Cfi1lp_KD"}},{"cell_type":"code","source":["# 정규화 파일과 분류 파일 불러오기\n","regularization_file = '/content/drive/MyDrive/Colab Notebooks/정규화_가장유사한셀+행번호.xlsx'\n","classification_file = '/content/drive/MyDrive/Colab Notebooks/분류.xlsx'\n","\n","# 데이터프레임 불러오기\n","df_regularization = pd.read_excel(regularization_file)\n","df_classification = pd.read_excel(classification_file)\n","\n","# E열이 1인 행의 A, C, D열 추출\n","df_E = df_regularization[df_regularization['E'] == 1][['Text', 'Row Number', 'Matching Content']]\n","\n","# F열이 1인 행의 A, C, D열 추출\n","df_F = df_regularization[df_regularization['F'] == 1][['Text', 'Row Number', 'Matching Content']]\n","\n","# G열이 1인 행의 A, C, D열 추출\n","df_G = df_regularization[df_regularization['G'] == 1][['Text', 'Row Number', 'Matching Content']]\n","\n","# 분류 파일에 추가\n","df_classification = pd.concat([df_classification, df_E, df_F, df_G])\n","\n","# 파일 저장\n","df_classification.to_excel(classification_file, index=False)"],"metadata":{"id":"k767UVgZqAUo"},"execution_count":null,"outputs":[]}]}